{"version":3,"sources":["/Users/m.sharipov/Projects/eo-locale/src/components/provider.tsx","/Users/m.sharipov/Projects/eo-locale/src/components/text.tsx","/Users/m.sharipov/Projects/eo-locale/src/components/text.mdx","/Users/m.sharipov/Projects/eo-locale/src/context.ts","/Users/m.sharipov/Projects/eo-locale/src/parser/token_stream.ts","/Users/m.sharipov/Projects/eo-locale/src/parser/input_stream.ts","/Users/m.sharipov/Projects/eo-locale/src/parser/parser.ts","/Users/m.sharipov/Projects/eo-locale/src/utils/translator.ts"],"names":["EOLocaleProvider","_ref","children","language","locales","stateHook","React","react","src_context","Provider","value","setLanguage","translator","Translator","EOLocaleText","html","id","values","Object","objectWithoutProperties","context","EOLocaleContext","keys","forEach","key","renderToStaticMarkup","result","translate","dangerouslySetInnerHTML","__html","MDXContent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","react_default","a","createElement","dist","name","index_esm","__position","__code","__scope","Playground","__codesandbox","provider_EOLocaleProvider","text_EOLocaleText","defaultMessage","count","Component","isMDXComponent","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_utils_translator__WEBPACK_IMPORTED_MODULE_1__","prev","next","ETokenType","InputStream","input","index","done","charAt","createClass","length","Error","concat","PUNC_SYMBOLS","TokenStream","message","readVariable","readText","ch","croak","predicate","str","skip","readWhile","includes","isPunc","trim","type","Variable","readVariableType","options","readVariableOptions","Text","Plural","Select","readExpression","tokens","push","format","params","tokenStream","applyToken","map","join","Intl","PluralRules","select","arguments","undefined","messages","locale","find","item","DateTimeFormat","NumberFormat","toString","error","console"],"mappings":"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","file":"static/js/src-components-text.e986b3ae.js","sourcesContent":["import * as React from 'react';\n\nimport { EOLocaleContext } from '../context';\nimport { ILocale } from '../models';\nimport { Translator } from '../utils/translator';\n\nexport interface IEOLocaleProviderProps {\n  language: string;\n  locales: ILocale[];\n}\n\nexport const EOLocaleProvider: React.FunctionComponent<IEOLocaleProviderProps> = ({\n  children,\n  language,\n  locales,\n}) => {\n  const stateHook = React.useState(language);\n\n  React.useEffect(() => {\n    stateHook[1](language);\n  }, [language]);\n\n  return (\n    <EOLocaleContext.Provider\n      value={{\n        language: stateHook[0],\n        locales,\n        setLanguage: stateHook[1],\n        translator: new Translator(stateHook[0], locales),\n      }}\n    >\n      {children}\n    </EOLocaleContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport { EOLocaleContext } from '../context';\nimport { IFormatMessageOptions } from '../models';\n\nexport interface IEOLocaleTextProps extends IFormatMessageOptions {\n  id: string;\n\n  html?: boolean;\n}\n\nexport const EOLocaleText: React.FunctionComponent<IEOLocaleTextProps> = ({ children, html, id, ...values }) => {\n  const context = React.useContext(EOLocaleContext);\n\n  Object.keys(values).forEach(key => {\n    const value = values[key];\n\n    if (React.isValidElement(value)) {\n      values[key] = renderToStaticMarkup(<EOLocaleContext.Provider value={context}>{value}</EOLocaleContext.Provider>);\n    }\n  });\n\n  const result = context.translator.translate(id, values);\n\n  if (html) {\n    return (\n      <span\n        dangerouslySetInnerHTML={{\n          __html: result,\n        }}\n      />\n    );\n  }\n\n  return result as any;\n};\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz';\nimport { EOLocaleProvider } from './provider.tsx';\nimport { EOLocaleText } from './text.tsx';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"eolocaletext\"}}>{`EOLocale.Text`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic\"}}>{`Basic`}</MDXTag>\n<Playground __position={0} __code={'<EOLocaleProvider language=\\\"en\\\" locales={[]}>\\n  <EOLocaleText id=\\\"hello\\\" defaultMessage=\\\"Hello {name}!\\\" name=\\\"World\\\" />\\n</EOLocaleProvider>'} __scope={{props: this ? this.props : props,Playground,EOLocaleProvider,EOLocaleText}} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSD2DPHUABlTniGBoKEVguAyVD0NldoPTgARyABdN9DgSR-0oaipxwAg4CwXCIPYKCiNIuJYEsbApjQo0GKYli2PXGhONoLACH4wThPw9hA0leiTU1dowVQXQUWOU4sOcAhEixdhuFE9YogEZ5UCudoAAZ2CTGYhL3asZg7FgZw8gAWPz2AANj89oAosMBgIAMW9aBEg8_hnEOBEHUwGChH4JYiGoSg4CChE4vWRKaGcCAsMudgAEYwoC-RTPMqYAEE5gc9gIyg8gbCgdAw1QjkHLEProxkdgUTsmBuGAbCbPmuB5C3GtgEG6ARuCAAyPbxkSeZKGabbhtG7grrlMBkMlAZUHadgAH4Nh2sMI3Gq5zt21A2urKQZCrN8zBhdVjhgMAwigKZPomqaAe65dqwTfTNKSzIUivAgNprWtxLI2BKJ4mijjgmdQlcNI-BAOh-HYKBCfgRaAG0AF11pXPHGAJySYGkjTOB4fhNgSSh6cwKHQhhvV4Aqan-AACXnRnRNQb0YHkABCen1aPGmAHUhWG-nNy52tJF58jid4jJcYttGcAxqnsY2qQkeBswvxAZjWM-FSBK4qjSa0rBAN0ECDDAvDwaMEI7DRwz5TNP1bXBsSSKZxw9EFuS3UYj0I5knT08aCTyLo-T3Q9YrMCgOAS_tKDLEyVA4DgiIjjzjCcA9cJoDU1v2-iIVU-dLBdLQWgBChnKGitong6nYnB2AdZyZSSm0iuFFpxSFVq0Zvn7jLpn2YP_7QYn8GOsIzO-Zt0mrkdpK7u7VA12ofRGHn-_raXjIK84CTUcv1dYP0wzxQZu4TeVMYBQKPuROArVxrcEmmvast8URZEVsIXYjlHZ5BgDZLIEYN5bxgB-UyFhCFwBgGeMAYAtgEAjHDNBTkUazQIDgvBLNGpszITAihVDqxKHYCzchcC2YiPWF0AgfRzBRk4TzP-sBs7qU0o_Kc5tWDxAZItDBeM8aSO3lwnhlBtgs08mzKBRiGZM2QebCwdCCDESEXAne3DaC4IsXwmxTjxhDw7kKK4zoxgt3cMPTuEZsHeN4dYpYiCsQclsTWeQ_08b2wsFtIav0Mk1ikAvGA6iZI4C0XbdYIj5AH29r7ZSX9VKSA0aHcOwF9AMBjvaOO_g9KaiTqaRUB9OkEUnBkSwlASExHIHqVwAhtihBmJXfOAyLRWkkHQgQrAMhj2GaJO-5c1FtNzknXuAIc4viGSJKCDQkpCiiAQWWcB5YwB1DMd-dhu4KRroCeuY8wb2inhkWe3Rf4HP5jJIB0INJ0HQHYG5dzoiPOea895HCLBcE8XvA-6xCAkGelcLwlBySoAvqZf5Uxb5FIFgQZ-monZvwep_DMBAf5UohQOYBvV-pvQunQJYuKoBLC4EsXuOBdFQAZB81B6DwHUAskXQWBC6VEJKRpCMRTVUEBkdWHUHh1DMJwNsGAiQ4ARnFZKjkOBEoCDPBKPAEYjXJHYYYmst9zXdEcu6uALNHVs2xZwiAzQIyO1sAANXiFwC8MBsZmr0ZQ8aLq8Zep9catmvVRkCHGZM2IMy5kLIjCosFmqykAKOO6xaCqCDrWAO6-QhTVHFKOZo0tYgRF43yfIbVFhb5dHpDDXqlb-JBJHgIIdkSO4wAjMK9gXqu2cCDQKhNK45EKIRnYxgZU1icLxugGBGRBhJGcKOBoqBnQCEVpYPUxEDEBIsAAfTvQKq4vbpYEFSe2_JeMzacLbahahE5Ryrpff2npSIL41KUD7JSg6BKtL0KBcCulukJz6VXZOgzTK7OuWCpZPdJC13nA3S5ulm7Ds7rhhSkh-71yaWR0e_ryWcD0DPCUIKNVNrRdAimHiuFYvXg4q4DQwXn3WKicdI6rgRLbsEgQ_rnGjjcdxtIgilMNV3gUDkVxWCUC4KS_049dKUobZq3qjtyCmloJq1lxmm0NnWImrjsDTHtEqpwpJ8Arjs1SY8cY7cp6IBYBUDwsBzTjwtFANAlxUCUHNNGt5iQVwuMU05hqbD0FKBXGJ6TEn2BhKsHRgQn0oEZerBGfsMBWBLDC9Kvq5XWA4BMd0LW10wsNfcWkF6TV2BXE8ikswIjalKQIzR1Q2AtJwcjgwRjtl5hWCRXA3q6mZzsAAD65dCEQQIsmyXXwBcx4Fp8-acca5igoB8LBHieXAk-YoqACHQBu1EBQliXrlnAsQemr66Rm90SwtyBD3Pm2kFFD07BKruw9pbKQlhQ9W-tzbtE1uOzRgAOUBB9nbk99uscaP9wHb3gdvNB1CkCsKrB48RQTl5RO5WccltDB5VP8W8bO2YeQg3WLUcHuJzu43tBFwQ1h3HCLGdXcJ-8pYQmmYvaB90T51d8M_KI2nJuhoRcUYV0FAQGyuKzI2X83bFK4JPPyzzoUnH-xsCyABjs1AkiOYoadmc52-z9F0bQG3JxUD28u88m7WwhSQ6ezOGXVOMf6YsDMN4EXyCFjbqiUIkohQqZS71dodA4r2OPoJ4TabHLsyXZw2-7nerubgFa1QU7aCynYS8aNbXVMOWuo1udFgJi2Ab6nxyjWXdt4JDgX313S9M06-5gfVO7BXGANU9Yl9ArR9iGrgH0QtSkPdVcVftAliUBp23ZnJ6CBQBwJv_m_IYAU4ICDuVmmWfLYcyugQ5g8sH6PyfywZ-L8Rnb-Xxr2_d9wEtWtXuVjQlUoRdzn0jwX1jyAOiBRw2y2xAIZFCXgIyD_3eX3xoCPzgIRwEAvyvzbkLzxgfyfxgDGBfxwGwK20_2_07woTQNB0AJF0QLANn3_Sj2C0XyyyiUnQxVv2hz2H_0Ewv1l3wLB1Ek7Sd1nAc1vignp1fVlxFV7i9Tokch33eV7wZlHHYEHw60choJ0PgBZi4D9X_XRSDR-1Om0Kpyb0cnaFQBQIEFfE4yIMA0fysLFz_AiBsj3k-g0IgJrEDT6gsOaAMJsLlGQklki3QCcIczMKCOOhgEsLkJlmsOa1sKhxiICWIKFg0IsH8LxlCMcmSNF2eT8NMMCWSFiIA3kTcJgJYRoN_3cOeSWFnT8NWAIEGj6gyCEAEEIKMXMiJT_G6OT3aBZkSPNHczTUz2GN6LKIjxrGyIMPALZy9kgzqS1x1w2IyD5woDaUFyuUInGSNVQEsASMlyOL5SsAsToG8PFFlHl0YiaWuNQDvV3juIN10lujMnfiX2AJOz4KKip0kNJFmW9H9wh0ez3iWCRFbUkM41vgiGONuO9F6jywuNQGRKIAjAMN_VgCmGAymFsLHm7TlSmFmDJESHRK5SgjUNByWB-xaLjVQkE3RJv1h2dRXECK_wSLCLPHRNOPmBwHDX6FcGC0oWcIWNcPMC1zBJZndRMM4XyPnT6lpOvwlLiO5Nmyukcj5OeIFL_CPVgElD6LsWyNVLbhZhlKIG9XlLZgH1mAjHJKSFZP_B01QEfFfFyL_XmLxi5J-15P5ISLKQlUyCgBNKMTNP_xZmf0wODL6HiBFGlngBT2ERwDoSNJYStJtLjWkTtKiBmEdLmGdOeMtXUDdI9N_XbRXCVOyPdXALkzzCGm6AjC1kRJuNRDuJwDQCj00i93FPv3gFfXYAAGpHInTKTniv9njMScAwtPpf1_DsiCS9MOdddtcMgnjjjXiOzvQdigJ4Mo5ENS4T0ezMSNdHjuzwhtzTRrQGNDdoR7DZRdTjj9TONYJ4zBV1hDTmEoFqUoFhSIBRTYBWpMdwZAUWM54qSXUfsrhny6B9SXd18-CXdzS4BmdbtA9ITntGh0T2Zw859_TLBKJshYhrdQFBpJCatCViV_Vb4dRoIzwUc09gA_Rb57BiIdRnAzw095BWLST2AtQzxiIGg9QGhLAzwRQ09FAx5b5oIABVFHewO9ZwAATT1GvBImcF6hZnosYqWHYs4rPCWEEuEtEvEpFAVNkuIjkpFE6mIjvQaEEpR0sBuXnkktsLJA_L4vj3YC4uIjPHsEsAcqcpcqSjcrT3TOYQ-JvmNzsHRLPJdXYJj09zt2SEvJpUaFQFPJ3KIAbKSsXw6jRCT0KwMMoolJoPStRNIMyuypvOxKpwXLYKgNyxkk-hZOeIlL9P73SrFSZO1PYF0pR3DIsGyJoNNHQAAqAsnUrO9OXSlPxA73GupV8NYPmMt3d26DgG2AgALIor4PDK5M6LSIWvLx6vdWGpOq7KyvCA-CEFcG2BWsVPKIquus0jnMarWrd2t3GoNibLKy6BYDiFoEk2IsBqyHDLxN4zT2JJrBGCbL6lbO6tepwD7PYAOldxIqBsnRep7N6tAI5Aut3hHL0KRtxrrPNhxpuvermLmpqPMF3mWM-qtw93GsmrFLhgcxoK2p2ojEGtbzjwsndV6jGvFHQF-ugEnU6PYS1lsGgjugjEGgJqHX5Ees5KDXdQazoBSALH6t63VMup6vM0oHuseqrJ9OVK_1JpuqFv6oMq4ouq5u2oLLtrPH5pGvmqqLbwSNgsDMFLZuAoCXdXfVQhps4Udp5pMpErEokv5oRJ5JJsWtFv9v5gSLhh6TgpOISIbPdrpv1tQquBFo7GTtEKKwprOJ0TjVSRn1ETYK-pZtFuWvDOyKqJgsOL1KDL_IrtAILv7x-r-qlsmiOuukGrRsOiHschdr60VMZvWHWu-qTtmUArFP1I5pXDjq1Mur7oloVrxHYXHoEqEqjvMstSeyxP5r9PjuumgmstsvsscsYtCrcouuyIzv1LjNDNDt9PMMvscj8oCqCvvuctcpjv1pft9oNPnGYU_prEps0iNpNo-tnrrspAXpFLFJLvDPDoLMjrMpjuzoFoOEEN6QhKh3OOeLwt6mn3wbholqCKts0iFuOsnrzqjMLvQEbrxoZGVrPrz03tFrPAnl7XyGoFNrSWev725udo4vtvwcjPUNWqQeZpQY7AEfKyeQelXqL34rbLbnauOPZm0oVMywkadt5oYqGuofhsto7zOqZKYekddv1p0fLyjzgHtRoPepmqVKwYjEntkfmuccZrny-PumZFlvlr2qhxv2ovFHMBdWyPksUuUrUo0uImcCuvIAlXKB3qqVWOUHWL1w3PSuvM7Ng35z2MPMY0yf8DhVeoStnuatGx8Eck8hd3ytj1RscihnrhgDaeaptrlBhvaYIaKuiTnvrtt29zSterKs5v7wGdgY-D8AEE6nqKRrUEQfnw4Nj3erhLmZsfDCwGHOHPwa6oObUHYDEATtOuRtgBnAmAdv706cCQZGgZztXRoIWfoaWdmVWesZuY2Znq2eSvgYeswbwCEDGDyzPAEB6IjGKBZgABJgBYH5A7T2A5KDNmFcxBpQTJRaJ-BkXPm402oQA9hpTSoXgHp2AiX1nsB5AcBigPr_pvZyptg4F_w4BqAJt2kwIXV-A9ZGQkB2B-AfhixqgMhYssBvQyQhWoF-AtltcHp-Arh-BPIcB1XPJCp1h-ByhzMdr34VWRWQBOpZo8JYAoUZWLXMAyRKBEhcw8gCgbdJRzQxW_hSxtXqx-Aog0AjX-AmnOXPWLBdWYB5hwwzIIB4AjWHNdWrI_WQAAA9RqDVjVoNmsfgFZeNpNqKHAAAdlTZAFSQzc1EtEiCzcahzfza1ZAFWvZzWPddwF0EgBSE5e5fKYPIYDXhAGrzJCyBVdFYsxgHNBWXNHJP4DrfSSAA`}>\n  <EOLocaleProvider language=\"en\" locales={[]}>\n    <EOLocaleText id=\"hello\" defaultMessage=\"Hello {name}!\" name=\"World\" />\n  </EOLocaleProvider>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"plural\"}}>{`Plural`}</MDXTag>\n<Playground __position={1} __code={'<EOLocaleProvider language=\\\"en\\\" locales={[]}>\\n  <EOLocaleText\\n    count=\\\"4\\\"\\n    defaultMessage=\\\"{count, plural, one {You have one item.} other {You have {count} items.}}\\\"\\n    id=\\\"hello\\\"\\n  />\\n</EOLocaleProvider>'} __scope={{props: this ? this.props : props,Playground,EOLocaleProvider,EOLocaleText}} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSD2DPHUABlTniGBoKEVguAyVD0NldoPTgARyABdN9DgSR-0oaipxwAg4CwXCIPYKCiNIuJYEsbApjQo0GKYli2PXGhONoLACH4wThPw9hA0leiTU1dowVQXQUWOU4sOcAhEixdhuFE9YogEZ5UCudoAAZ2CTGYhL3asZg7FgZw8gAWPz2AANj89oAosMBgIAMW9aBEg8_hnEOBEHUwGChH4JYiGoSg4CChE4vWRKaGcCAsMudgAEYwoC-RTPMqYAEE5gc9gIyg8gbCgdAw1QjkHLEProxkdgUTsmBuGAbCbPmuB5C3GtgEG6ARuCAAyPbxkSeZKGabbhtG7grrlMBkMlAZUHadgAH4Nh2sMI3Gq5zt21A2urKQZCrN8zBhdVjhgMAwigKZPomqaAe65dqwTfTNKSzIUivAgNprWtxLI2BKJ4mijjgmdQlcNI-BAOh-HYKBCfgRaAG0AF11pXPHGAJySYGkjSubxwtkIIGmwv4IW8cwKHQhhvV4Aqan-C2toaFJKA-niJZqG6YAAE0Vj8Vhul1zhaCIHA0JETYjgNo3XBN0SqFFtCXhgIg4CttqQClmsuBpzYEkoSWUeFzchakXnyOJ3iMlx2tJDRnAMap7GNqkJHgbML8QGY1jPhUgSuKo0mtKwQDdBAgwwLw8GjBCOw0cM-UzT9W1wbEkimccPQNLo-T3Q9KuZJ0zvGgk8iB7dRiPWKzAoDgMf7SgyxMlQOA4IiI45JnnAPXCaA1PXzfoiFdvnSwXS0FoAQoZyhpo6J0up2JwdgHWcmUkptIrhRacUgqmrIzPm9wJ5M3ZkA_6oMr7gw6oRbufNY6kyuMnJKd1uyoDXLrGgjBH6IJji_DIb84CTUcv1dYP0wzxQZu4b-VMYA0JAeROArVxrcEmh_as8CURZAABLCF2I5ZOeQYA2SyBGL-P8YAflMhYERcAYBnjAGALYBAIxww4U5MOvDaACMoNsFmjU2aSLodI2R1YlDsBZlIhhbMLHrC6AQPo5goxhx5gQ2Avd1KaWQVOIWrB4gMkWlw4WNZbG_1mgQfhgiWaeTZjQsJzCsSJOFooggxEzEML_tEvRsTjGpLxqidwp9t5XGdGMNeJSt5CgjLomA-jDHxKWMk-AHJCmoX-njBOFgtpDV-l0msUdPEwG8TJHAfj47rAsfIIBud87KRwcXHx5dK7AX0AwOu9oG7-D0pqFuppFRAK2QRScGRLCUHETEcgepXACG2KEGY08MKHItFaSQiiBAmwEBfE5okEGTy8es_uu8ML7wBH3F8xyRJQQaElIUUQCAKzgErGAOoZiYLsKChSc9ASLwvmDe0N8Mj326PgwF_MZIkOhBpOg6A7BwoRdEZFqL0WYu0RYLgOSAFAPWIQEgz0rheEoOSVAUDTKEqmPAp-lKNKoM1CnDBD1sEZgIHgmVAsCAkLIX1Aa_TqHXBIEsLgSx944ECZreAY14ahMLBvKVwKpjCIVaIsZGkIwyrdQQBx1YdQeHUGonA2wYCJDgBGC1DI4AchwIlAQZ4JR4AjMG5IWjbUWHgRG7ojlM1wBZsmtmvKw4QGaBGZOtgABq8QuAXg9vocNQSZHjTTTWHNeaQ1s16mcgQFyrmxFufcx5EYPEUq9RMohRxM2LRHhpdawBM3yGGSOx1Y6SZTjEBYvGgz5A-vTdQCyXR6Qw16tOzSxSN41IEPxE-W8YARhNewHNO7OAlv5VAJtK4nEuIRmExgZU1hh2lnQjIgwkjOFHA0VAzoBB8MsHqYiIS_YWAAPpIdfVcA9csCAdIsPIQZeMI5hw3ahORE5Rxfow0e3ZSIoFzKUHnJSJ6tJrL0KBcCukdlN32YPVuRzTJ_NhRS55ClJDz3nEvaFulV7XrPjvFuB8YiL0kGe0p59C2Ss4HoO-EoyWesdRy2hFNslRJ5Z_JmYCGgUsgesZTF6rhVPPTJwtFh0mZMM2kUxbmGr_wKByK4rBKBcHFf6S-ulpUjK9b1ZO5BTS0C9eq8LjqGzrGbREhq7RKph1aWA9mqTHjjE3jfRALAKgeFgOaS-FooBoEuKgSg5oPYYsSCuFzWTImaM4UoFcNmZPlJgJU6T29Po0M69WCM_YYCsCWBV9hk0xtdFYDgVL7AACE10KuLda90V6jV2BXE8u0swFj5lKVE4p1Q2AmPaBHqx9Ttl5hWBZQw3q3mZzsAAD7sFQKEIggQBBqdgUSzTpLwF8306l7lBQgEWCPCihhYCxRUAEOgX9qIChLFg4rBhYggswN0nd7olh4UCERY9tIbKHp2GdYj5HL2UhLFp-9z733fuM-TmjAAcoCbHEqAdjiB9pxoROSeY7JxiinNKQL0qsEL5lIu0Vi73fpmW0MkVy8FcZyHZh5DHdYofRT3Xt6XYoOs1j_HBdMtV7D0XmKlgWaZuj0n3RsVDxE3i8THcV6Ggt0Jl3QUBCfK4ncz5BLec9DgiiqwA2hT6f7GwLIpGOzUCSAZ-hkTadQ77P0QJtAE8nFQMnmHqL4dbCFDT1HM4Hdy-58FiwMw3hVfIHa_-oRJS1KW45dodA4oMzM1cO3fN2a9XZu-sO8DWm9SyzG1Qd6Lbw3dpbdv11UtPosBMWwG3PMT82xn1fBIcCF7hxPpmL0e98333LuwVxgCzPWNAwK9fYhe-J9ELUEjM1XFf7QHWCuN7q4gwQKAHAT_fmfkGAGXAgcnPdXzDXV7ZtT9AQcwCpRoGgQA4AywUA8AiMNfL2VLb_TFaNWNRFetS1IjO_WvB_RvQg6IdnZnSMd_JnH7DIPAinP_FAnAGgxggQcAyAjeEfPGeAxAvrZAgA9g2grgi3LAvfXAvYH_KNGNCQzNUgkjOvUrR_A3W9LlGAunGQzFPvcAx3HgynUSbdCHWAlceBKCZXTDR3U1feHNOiRySgWQnfBmUcdgA_NIXqbA8_K3eAFmLgAtEjTlEtfHU6dwuXBya6doL7Tg18fTfgsjBA8I3w_iS5cvFIT6Fwsg_2EI46GAMIjwrNKI5CGWardAOI5tYIvqUI5oKw-WCI1bDvWnCov2AQzgdAFwnDIImsQo3qOoy3VFLI7o1EZISo0jZxJIqg9Rbw6QwopYR9LI1YAgQaPqDIIQAQPg4WcyEVP8NY2pdoFmfI80VpDtbvPYjYoYmvGsNowojPf6f6HXQPf3DIJ4z5I3ICFjGuNjceM8C5YNVASwPI23P4ugdHAxOgGyU0WUZ3RiJTcE1AJDf-cUa0f7XSW6MyTBJ_Ig8HLQoqOXUw7Qv3b0YvanFHABJYJEddAk_TeBCIf4yE5E3qJAkE1ABk70CMQoojWAKYCjJ1OUC-Xde1EIOYJIFk3qfqHQinJYfHeYhtVCPvFk6AhnVNFcYtaovIyIxyX4-EwE-YHAStfoVwUrGReI64xI8wIkz2FmTNQIsObIqoiMJw_A00h0_HTUwiFk3Uv8MDWASUTYsJNop0inFmS03NG0tmffWYCMWYMkRIRU_8ALVAR8V8To4jK4vGNUrAjUq6LUz0vIiZTWTIN9F0s0iY8wIMvdFmJA__QA2CLWKAEUOWeADzVPGRHARRX09RUM60htexCMqIGYaMkUuM-E6NdQRM5MojTdFce08Yr9TNO4pzPMIaboCMZbOkiE1EZEnANAOvTSPPE0uA-ATDdgAAakchjNFPhKwPhLZMtgq0-iUKuLaN5KC0eL9wDw3IRKRO9HeOuy-LNwgz3LvJ91hN3PCERK3O9BD10joG-w9J1I1NtTrKLJoR9LURoU1RoQNIgCNNgFah52vn5wfjFNtXxyuG1P-K9Iz3oPTyZFkPVwR1LzJLR0aBZPZmrzvzdMsEomyFiHj3IUGgJJm3YGFVFULXgR1GgjPHZ16naGAD9HgXsGIh1GcDPDkvkEUr3SmC1DPGIgaD1AaEsDPBFDksUAvngWggAFV2d7AkNnB9Y9RrwSJnAh8pKZKlhlLVKzwlhdL9LDLjKRRbTLLiIrKRROpiIkMGhdL2dLA4VH5TKO8yR6ytKhS1LiIzx7BLAoqYq4qkoEq5KOy1EYK4Fw87AWSQLbUVCG9c8k9khwKCA-9UBgKoKiAlzqrH8Oo0RW8BAOT8StD_T8R18GqmShCgLwg7y-rfCnz1gOrG8HzoCjL4TTTMzvCGrzU5Scz2B3L2dBqLA2jvDTR0AcK8Lb0py0yP1zShqvYjrNVMjb9lCs9484BtgIBByhKBqVqS0VjGjrqdzmrwgNqSCSy1qAbNJotKBXBth7q7Thi991qFq7jHq48c8jqAB1FcubPiuIWgOzXilgHGw8lcbk4zOSgUmsEYFcvqdc-GsGnAA89gA6TPbGiRUGvcoGhkDkPa0m88v69ahcoWNmwGxGmc7oto_-JGq42PbPSkcUY6u5XC40uGZtbwl6t6iMHalfJvKYTNLwvfdGzGlYrRZbWwaCO6CMQaLmq9fkGG1UktTNRbOgFIAsLa_bEG2m9miGqGmG6c9M59aoj2wG3WrarytS7m1W16wc0Os8LW_aq6sY1fPIiivMvUk6407DB9BtDpG_WGv2iO9WvygyoykyrW2k7Mv6o6tOqSPIuGXZSiugaisW-OoWCsjeK4Q6uWqu-XTFIbQWoEgJLOmcyW2ap61GuWu6watosY8ihCqi_MrCgey1du_WuWjG6AW9I2yaH666Haxmw6bexyaOg7O04ewKUe2WjsLur05W8w7So6e7RyDujsNe2AC2vELRA-9gQugKku62ogW2otXIh-66aCUK8KyK6KmSvKhK7mto-ugE_MlC-IS4u29U4BxydKzK7KyB2K-KkuksuBlO70-cNRFBsOIW8GoQb2mas-lGi--Ww040wwm-8hvfNWwc7-4ukUUuu-1ukk5i2nYE-Eji3qa_JciwSm9egO4aum3W36o-ksvhlmJ-9ACejmv8VHf-jkDtR-lejsM8K-A9fIagH2msWc_OqOlSsO8RucpIvh0-2vc-3PAx8bFFB6FhvGWk-E8zdinR6xW0rrNhyOjW6S3amxyR2AaRr2fmuU-RqxmOkG7xnAOvOARNbwha868xoJ9Wo-mxg67xyWu_dE-6ZkU282j62naAsS8UcwW1No6y2y-yxy5y4iZwf68gTWcoN-mZHOOjBZD8l4hqyCqEv8k3L49TDp_wBlMGyq2aigjTNQXqTyDPOayyZ0XqKGReGAFZ-Z4O_k9q-ZrqlvQbaW-PI6uqjTPc4S007wvZihj4PwAQTqaY2mtQGh8g1Q-amST6aklW157AU808mx1a_5nwMQXRmR9m2AGcCYcOvfBmx-tEbZ0Wv2g6vfO5wO8Gx555yQmRt5hxvsQ5qh6GwaiYIQMYJAs8AQdYiMYoFmAAEmAAofkAjPYCspCzUVzEGjuTNFon4EZduYbR9j2AtNKheAenYAFdBfkBwGKCfIeLo3Km2AYX_DgGoGY2rgYFtX4FQG9EZCQHYH4B-GLGqAyHqywG9DJH1ZoX4G-WMf9ANf4E8hwGdc8kKnWH4HKGizeswX4CuH4E6lmjwkiZ_CtYhjJEoESFzDyAKAT0lHNGNb-FLHderH4CiDQD9cNZUHDA0DgBTYsE9ZgHmHDDMggHgEzebU9askzf4AAD1GoXWXX82ax-BXka2QB62oocAAB2JtkAVJVtzUS0SIdtztntvth6v6eZJN3AXQSAFIVV9Vq7MZrV_gC2MkLIP1o1mLGAc0V5c0GM_gbXXDeQIAA`}>\n  <EOLocaleProvider language=\"en\" locales={[]}>\n    <EOLocaleText\n      count=\"4\"\n      defaultMessage=\"{count, plural, one {You have one item.} other {You have {count} items.}}\"\n      id=\"hello\"\n    />\n  </EOLocaleProvider>\n</Playground>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  ","import * as React from 'react';\n\nimport { ILocale } from './models';\nimport { Translator } from './utils/translator';\n\nexport interface IEOLocaleContext {\n  language: string;\n  locales: ILocale[];\n  translator: Translator;\n\n  setLanguage(language: string): void;\n}\n\nexport const EOLocaleContext = React.createContext<IEOLocaleContext>(\n  {\n    language: '',\n    locales: [],\n    // tslint:disable-next-line:no-empty\n    setLanguage: () => {},\n    translator: new Translator(),\n  },\n  (prev, next) => (prev.language !== next.language ? 1 : 0),\n);\n","import { InputStream } from './input_stream';\n\nexport enum ETokenType {\n  Plural,\n  Select,\n  Text,\n  Variable,\n}\n\nexport interface IToken {\n  type: ETokenType;\n  value: string;\n  options?: Record<string, IToken[]>;\n}\n\ntype TPredicate = (ch: string) => boolean;\n\nconst OPEN = '{';\nconst CLOSE = '}';\nconst DELIMITER = ',';\n\nconst PUNC_SYMBOLS = [OPEN, CLOSE, DELIMITER];\nconst PLURAL_IDENTIFIER = 'plural';\nconst SELECT_IDENTIFIER = 'select';\n\nexport class TokenStream {\n  public readonly input: InputStream;\n\n  public constructor(message: string) {\n    this.input = new InputStream(message);\n  }\n\n  public next(): IToken {\n    if (this.input.value === OPEN) {\n      return this.readVariable();\n    }\n\n    return this.readText();\n  }\n\n  private skip(ch: string) {\n    if (ch !== this.input.value) {\n      this.input.croak();\n    }\n\n    this.input.next();\n  }\n\n  private readWhile(predicate: TPredicate) {\n    let str = '';\n\n    while (!this.input.done && predicate(this.input.value)) {\n      str += this.input.value;\n      this.input.next();\n    }\n\n    return str;\n  }\n\n  private readVariable() {\n    this.skip(OPEN);\n\n    const value = this.readWhile(ch => !isPunc(ch)).trim();\n\n    if (value.length === 0) {\n      this.input.croak();\n    }\n\n    if (this.input.value === CLOSE) {\n      this.skip(CLOSE);\n\n      return {\n        type: ETokenType.Variable,\n        value,\n      };\n    }\n\n    this.skip(DELIMITER);\n\n    const type = this.readVariableType() as ETokenType;\n\n    return {\n      options: this.readVariableOptions(),\n      type,\n      value,\n    };\n  }\n\n  private readText() {\n    return {\n      type: ETokenType.Text,\n      value: this.readWhile(ch => ch !== OPEN && ch !== CLOSE),\n    };\n  }\n\n  private readVariableType() {\n    const type = this.readWhile(ch => ch !== DELIMITER).trim();\n\n    if (type === PLURAL_IDENTIFIER) {\n      return ETokenType.Plural;\n    }\n\n    if (type === SELECT_IDENTIFIER) {\n      return ETokenType.Select;\n    }\n\n    this.input.croak();\n  }\n\n  private readVariableOptions() {\n    this.skip(DELIMITER);\n\n    const options: Record<string, IToken[]> = {};\n\n    while (this.input.value !== CLOSE) {\n      options[this.readText().value.trim()] = this.readExpression();\n    }\n\n    this.skip(CLOSE);\n\n    return options;\n  }\n\n  private readExpression() {\n    const tokens: IToken[] = [];\n\n    this.skip(OPEN);\n\n    while (this.input.value !== CLOSE) {\n      tokens.push(this.next());\n    }\n\n    this.skip(CLOSE);\n\n    return tokens;\n  }\n}\n\nfunction isPunc(ch: string): boolean {\n  return PUNC_SYMBOLS.includes(ch);\n}\n","export class InputStream {\n  public index = 0;\n  public done = false;\n  public value = '';\n\n  public constructor(private readonly input: string) {\n    this.value = this.input.charAt(this.index);\n  }\n\n  public next(): string {\n    this.index++;\n\n    if (this.index >= this.input.length) {\n      this.done = true;\n    }\n\n    return this.value = this.input.charAt(this.index);\n  }\n\n  public croak() {\n    throw new Error(`[${this.input}]. Unexpected character \"${this.value}\" on position ${this.index}.`);\n  }\n}\n","import { ETokenType, IToken, TokenStream } from './token_stream';\n\nexport function format(language: string, message: string, params: Record<string, any>): string {\n  const tokenStream = new TokenStream(message);\n  let result = '';\n\n  const applyToken = ({ options, type, value }: IToken): string => {\n    if (type === ETokenType.Variable) {\n      return params[value];\n    }\n\n    if (options) {\n      if (type === ETokenType.Select) {\n        return options[params[value]].map(applyToken).join('');\n      }\n\n      if (type === ETokenType.Plural) {\n        return options[new Intl.PluralRules(language).select(params[value])].map(applyToken).join('');\n      }\n    }\n\n    return value;\n  };\n\n  while (!tokenStream.input.done) {\n    result += applyToken(tokenStream.next());\n  }\n\n  return result;\n}\n","import { IFormatMessageOptions, ILocale, TMessage } from '../models';\nimport { format } from '../parser/parser';\n\nexport class Translator {\n  private readonly language: string;\n  private readonly messages: Record<string, TMessage>;\n\n  public constructor(language = 'en', locales: ILocale[] = []) {\n    const locale = locales.find(item => item.language === language);\n\n    this.language = language;\n    this.messages = locale ? locale.messages : {};\n  }\n\n  public formatDate(value: Date, options?: Intl.DateTimeFormatOptions): string {\n    return new Intl.DateTimeFormat(this.language, options).format(value);\n  }\n\n  public formatNumber(value: number, options?: Intl.NumberFormatOptions) {\n    return new Intl.NumberFormat(this.language, options).format(value);\n  }\n\n  public translate(id: string, options: IFormatMessageOptions = {}): string {\n    const { defaultMessage, ...values } = options;\n    let message = this.messages[id];\n\n    if (typeof message === 'number') {\n      return message.toString();\n    }\n\n    if (typeof message === 'undefined') {\n      if (typeof defaultMessage !== 'string') {\n        return id;\n      }\n\n      message = defaultMessage;\n    }\n\n    try {\n      return format(this.language, message, values);\n    } catch (error) {\n      console.error('[eo-locale] ', error);\n    }\n\n    return message;\n  }\n}\n"],"sourceRoot":""}